/*
 * This file is generated by jOOQ.
 */
package generated


import generated.tables.Company
import generated.tables.Customer
import generated.tables.records.CompanyRecord
import generated.tables.records.CustomerRecord

import javax.annotation.Generated

import org.jooq.UniqueKey
import org.jooq.impl.Internal

import scala.Array


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.11.11"
  ),
  comments = "This class is generated by jOOQ"
)
object Keys {

  // -------------------------------------------------------------------------
  // IDENTITY definitions
  // -------------------------------------------------------------------------


  // -------------------------------------------------------------------------
  // UNIQUE and PRIMARY KEY definitions
  // -------------------------------------------------------------------------

  val COMPANY_PKEY = UniqueKeys0.COMPANY_PKEY
  val CUSTOMER_PKEY = UniqueKeys0.CUSTOMER_PKEY

  // -------------------------------------------------------------------------
  // FOREIGN KEY definitions
  // -------------------------------------------------------------------------


  // -------------------------------------------------------------------------
  // [#1459] distribute members to avoid static initialisers > 64kb
  // -------------------------------------------------------------------------

  private object UniqueKeys0 {
    val COMPANY_PKEY : UniqueKey[CompanyRecord] = Internal.createUniqueKey(Company.COMPANY, "company_pkey", Company.COMPANY.ID)
    val CUSTOMER_PKEY : UniqueKey[CustomerRecord] = Internal.createUniqueKey(Customer.CUSTOMER, "customer_pkey", Customer.CUSTOMER.ID)
  }
}
